// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packageimporter.proto

package packageimporterpb // import "github.com/Debian/dcs/internal/proto/packageimporterpb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PackagesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackagesRequest) Reset()         { *m = PackagesRequest{} }
func (m *PackagesRequest) String() string { return proto.CompactTextString(m) }
func (*PackagesRequest) ProtoMessage()    {}
func (*PackagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{0}
}
func (m *PackagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackagesRequest.Unmarshal(m, b)
}
func (m *PackagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackagesRequest.Marshal(b, m, deterministic)
}
func (dst *PackagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackagesRequest.Merge(dst, src)
}
func (m *PackagesRequest) XXX_Size() int {
	return xxx_messageInfo_PackagesRequest.Size(m)
}
func (m *PackagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackagesRequest proto.InternalMessageInfo

type PackagesReply struct {
	SourcePackage        []string `protobuf:"bytes,1,rep,name=source_package,json=sourcePackage,proto3" json:"source_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackagesReply) Reset()         { *m = PackagesReply{} }
func (m *PackagesReply) String() string { return proto.CompactTextString(m) }
func (*PackagesReply) ProtoMessage()    {}
func (*PackagesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{1}
}
func (m *PackagesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackagesReply.Unmarshal(m, b)
}
func (m *PackagesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackagesReply.Marshal(b, m, deterministic)
}
func (dst *PackagesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackagesReply.Merge(dst, src)
}
func (m *PackagesReply) XXX_Size() int {
	return xxx_messageInfo_PackagesReply.Size(m)
}
func (m *PackagesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PackagesReply.DiscardUnknown(m)
}

var xxx_messageInfo_PackagesReply proto.InternalMessageInfo

func (m *PackagesReply) GetSourcePackage() []string {
	if m != nil {
		return m.SourcePackage
	}
	return nil
}

type ImportRequest struct {
	SourcePackage        string   `protobuf:"bytes,1,opt,name=source_package,json=sourcePackage,proto3" json:"source_package,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content              []byte   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRequest) Reset()         { *m = ImportRequest{} }
func (m *ImportRequest) String() string { return proto.CompactTextString(m) }
func (*ImportRequest) ProtoMessage()    {}
func (*ImportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{2}
}
func (m *ImportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRequest.Unmarshal(m, b)
}
func (m *ImportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRequest.Marshal(b, m, deterministic)
}
func (dst *ImportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRequest.Merge(dst, src)
}
func (m *ImportRequest) XXX_Size() int {
	return xxx_messageInfo_ImportRequest.Size(m)
}
func (m *ImportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRequest proto.InternalMessageInfo

func (m *ImportRequest) GetSourcePackage() string {
	if m != nil {
		return m.SourcePackage
	}
	return ""
}

func (m *ImportRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ImportRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type ImportReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportReply) Reset()         { *m = ImportReply{} }
func (m *ImportReply) String() string { return proto.CompactTextString(m) }
func (*ImportReply) ProtoMessage()    {}
func (*ImportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{3}
}
func (m *ImportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportReply.Unmarshal(m, b)
}
func (m *ImportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportReply.Marshal(b, m, deterministic)
}
func (dst *ImportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportReply.Merge(dst, src)
}
func (m *ImportReply) XXX_Size() int {
	return xxx_messageInfo_ImportReply.Size(m)
}
func (m *ImportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImportReply proto.InternalMessageInfo

type MergeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeRequest) Reset()         { *m = MergeRequest{} }
func (m *MergeRequest) String() string { return proto.CompactTextString(m) }
func (*MergeRequest) ProtoMessage()    {}
func (*MergeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{4}
}
func (m *MergeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeRequest.Unmarshal(m, b)
}
func (m *MergeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeRequest.Marshal(b, m, deterministic)
}
func (dst *MergeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeRequest.Merge(dst, src)
}
func (m *MergeRequest) XXX_Size() int {
	return xxx_messageInfo_MergeRequest.Size(m)
}
func (m *MergeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MergeRequest proto.InternalMessageInfo

type MergeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeReply) Reset()         { *m = MergeReply{} }
func (m *MergeReply) String() string { return proto.CompactTextString(m) }
func (*MergeReply) ProtoMessage()    {}
func (*MergeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{5}
}
func (m *MergeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeReply.Unmarshal(m, b)
}
func (m *MergeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeReply.Marshal(b, m, deterministic)
}
func (dst *MergeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeReply.Merge(dst, src)
}
func (m *MergeReply) XXX_Size() int {
	return xxx_messageInfo_MergeReply.Size(m)
}
func (m *MergeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeReply.DiscardUnknown(m)
}

var xxx_messageInfo_MergeReply proto.InternalMessageInfo

type GarbageCollectRequest struct {
	SourcePackage        string   `protobuf:"bytes,1,opt,name=source_package,json=sourcePackage,proto3" json:"source_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GarbageCollectRequest) Reset()         { *m = GarbageCollectRequest{} }
func (m *GarbageCollectRequest) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectRequest) ProtoMessage()    {}
func (*GarbageCollectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{6}
}
func (m *GarbageCollectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectRequest.Unmarshal(m, b)
}
func (m *GarbageCollectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectRequest.Marshal(b, m, deterministic)
}
func (dst *GarbageCollectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectRequest.Merge(dst, src)
}
func (m *GarbageCollectRequest) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectRequest.Size(m)
}
func (m *GarbageCollectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectRequest proto.InternalMessageInfo

func (m *GarbageCollectRequest) GetSourcePackage() string {
	if m != nil {
		return m.SourcePackage
	}
	return ""
}

type GarbageCollectReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GarbageCollectReply) Reset()         { *m = GarbageCollectReply{} }
func (m *GarbageCollectReply) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectReply) ProtoMessage()    {}
func (*GarbageCollectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_packageimporter_bbd8f2ecc6eaae3a, []int{7}
}
func (m *GarbageCollectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectReply.Unmarshal(m, b)
}
func (m *GarbageCollectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectReply.Marshal(b, m, deterministic)
}
func (dst *GarbageCollectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectReply.Merge(dst, src)
}
func (m *GarbageCollectReply) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectReply.Size(m)
}
func (m *GarbageCollectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectReply.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PackagesRequest)(nil), "packageimporterpb.PackagesRequest")
	proto.RegisterType((*PackagesReply)(nil), "packageimporterpb.PackagesReply")
	proto.RegisterType((*ImportRequest)(nil), "packageimporterpb.ImportRequest")
	proto.RegisterType((*ImportReply)(nil), "packageimporterpb.ImportReply")
	proto.RegisterType((*MergeRequest)(nil), "packageimporterpb.MergeRequest")
	proto.RegisterType((*MergeReply)(nil), "packageimporterpb.MergeReply")
	proto.RegisterType((*GarbageCollectRequest)(nil), "packageimporterpb.GarbageCollectRequest")
	proto.RegisterType((*GarbageCollectReply)(nil), "packageimporterpb.GarbageCollectReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PackageImporterClient is the client API for PackageImporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PackageImporterClient interface {
	// Packages returns a list of Debian source package names which are present on
	// this package importer instance.
	Packages(ctx context.Context, in *PackagesRequest, opts ...grpc.CallOption) (*PackagesReply, error)
	Import(ctx context.Context, opts ...grpc.CallOption) (PackageImporter_ImportClient, error)
	Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeReply, error)
	GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectReply, error)
}

type packageImporterClient struct {
	cc *grpc.ClientConn
}

func NewPackageImporterClient(cc *grpc.ClientConn) PackageImporterClient {
	return &packageImporterClient{cc}
}

func (c *packageImporterClient) Packages(ctx context.Context, in *PackagesRequest, opts ...grpc.CallOption) (*PackagesReply, error) {
	out := new(PackagesReply)
	err := c.cc.Invoke(ctx, "/packageimporterpb.PackageImporter/Packages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageImporterClient) Import(ctx context.Context, opts ...grpc.CallOption) (PackageImporter_ImportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PackageImporter_serviceDesc.Streams[0], "/packageimporterpb.PackageImporter/Import", opts...)
	if err != nil {
		return nil, err
	}
	x := &packageImporterImportClient{stream}
	return x, nil
}

type PackageImporter_ImportClient interface {
	Send(*ImportRequest) error
	CloseAndRecv() (*ImportReply, error)
	grpc.ClientStream
}

type packageImporterImportClient struct {
	grpc.ClientStream
}

func (x *packageImporterImportClient) Send(m *ImportRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *packageImporterImportClient) CloseAndRecv() (*ImportReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ImportReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *packageImporterClient) Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeReply, error) {
	out := new(MergeReply)
	err := c.cc.Invoke(ctx, "/packageimporterpb.PackageImporter/Merge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageImporterClient) GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectReply, error) {
	out := new(GarbageCollectReply)
	err := c.cc.Invoke(ctx, "/packageimporterpb.PackageImporter/GarbageCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PackageImporterServer is the server API for PackageImporter service.
type PackageImporterServer interface {
	// Packages returns a list of Debian source package names which are present on
	// this package importer instance.
	Packages(context.Context, *PackagesRequest) (*PackagesReply, error)
	Import(PackageImporter_ImportServer) error
	Merge(context.Context, *MergeRequest) (*MergeReply, error)
	GarbageCollect(context.Context, *GarbageCollectRequest) (*GarbageCollectReply, error)
}

func RegisterPackageImporterServer(s *grpc.Server, srv PackageImporterServer) {
	s.RegisterService(&_PackageImporter_serviceDesc, srv)
}

func _PackageImporter_Packages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageImporterServer).Packages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packageimporterpb.PackageImporter/Packages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageImporterServer).Packages(ctx, req.(*PackagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageImporter_Import_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PackageImporterServer).Import(&packageImporterImportServer{stream})
}

type PackageImporter_ImportServer interface {
	SendAndClose(*ImportReply) error
	Recv() (*ImportRequest, error)
	grpc.ServerStream
}

type packageImporterImportServer struct {
	grpc.ServerStream
}

func (x *packageImporterImportServer) SendAndClose(m *ImportReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *packageImporterImportServer) Recv() (*ImportRequest, error) {
	m := new(ImportRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PackageImporter_Merge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MergeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageImporterServer).Merge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packageimporterpb.PackageImporter/Merge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageImporterServer).Merge(ctx, req.(*MergeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageImporter_GarbageCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GarbageCollectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageImporterServer).GarbageCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packageimporterpb.PackageImporter/GarbageCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageImporterServer).GarbageCollect(ctx, req.(*GarbageCollectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PackageImporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packageimporterpb.PackageImporter",
	HandlerType: (*PackageImporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Packages",
			Handler:    _PackageImporter_Packages_Handler,
		},
		{
			MethodName: "Merge",
			Handler:    _PackageImporter_Merge_Handler,
		},
		{
			MethodName: "GarbageCollect",
			Handler:    _PackageImporter_GarbageCollect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Import",
			Handler:       _PackageImporter_Import_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "packageimporter.proto",
}

func init() {
	proto.RegisterFile("packageimporter.proto", fileDescriptor_packageimporter_bbd8f2ecc6eaae3a)
}

var fileDescriptor_packageimporter_bbd8f2ecc6eaae3a = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x8b, 0xb5, 0x8e, 0x4d, 0xa5, 0x2b, 0x85, 0x10, 0x50, 0xcb, 0x82, 0x92, 0x53,
	0x02, 0x0a, 0xc5, 0x93, 0x07, 0x15, 0xa4, 0x07, 0x45, 0x72, 0xf4, 0x22, 0x9b, 0x74, 0x8c, 0xc1,
	0x6d, 0x76, 0xdd, 0x6c, 0x0f, 0xfd, 0xc3, 0xfe, 0x0e, 0xe9, 0x26, 0xa9, 0xb6, 0x89, 0x45, 0x8f,
	0xf3, 0xf6, 0xbd, 0x37, 0x93, 0x8f, 0xc0, 0x50, 0xb2, 0xf8, 0x9d, 0x25, 0x98, 0xce, 0xa4, 0x50,
	0x1a, 0x95, 0x2f, 0x95, 0xd0, 0x82, 0x0c, 0x36, 0x64, 0x19, 0xd1, 0x01, 0x1c, 0x3e, 0x15, 0x62,
	0x1e, 0xe2, 0xc7, 0x1c, 0x73, 0x4d, 0xc7, 0x60, 0x7f, 0x4b, 0x92, 0x2f, 0xc8, 0x19, 0xf4, 0x73,
	0x31, 0x57, 0x31, 0xbe, 0x94, 0x79, 0xc7, 0x1a, 0xb5, 0xbd, 0xfd, 0xd0, 0x2e, 0xd4, 0xd2, 0x4c,
	0x39, 0xd8, 0x13, 0x53, 0x5c, 0x16, 0x35, 0xe6, 0xac, 0x5a, 0x8e, 0xb8, 0xd0, 0x7d, 0x4d, 0x39,
	0x66, 0x6c, 0x86, 0x4e, 0xcb, 0x18, 0x56, 0x33, 0x71, 0x60, 0x2f, 0x16, 0x99, 0xc6, 0x4c, 0x3b,
	0xed, 0x91, 0xe5, 0xf5, 0xc2, 0x6a, 0xa4, 0x36, 0x1c, 0x54, 0xdb, 0x24, 0x5f, 0xd0, 0x3e, 0xf4,
	0x1e, 0x50, 0x25, 0x58, 0x7d, 0x44, 0x0f, 0xa0, 0x9c, 0x97, 0xaf, 0xd7, 0x30, 0xbc, 0x67, 0x2a,
	0x62, 0x09, 0xde, 0x0a, 0xce, 0x31, 0xfe, 0xe7, 0x89, 0x74, 0x08, 0x47, 0x9b, 0x79, 0xc9, 0x17,
	0x17, 0x9f, 0xad, 0x15, 0xbd, 0x49, 0x89, 0x94, 0x84, 0xd0, 0xad, 0xe8, 0x11, 0xea, 0xd7, 0x80,
	0xfb, 0x1b, 0xb4, 0xdd, 0xd1, 0x56, 0xcf, 0xf2, 0xf8, 0x1d, 0xf2, 0x08, 0x9d, 0xa2, 0x9f, 0x34,
	0xb9, 0xd7, 0xa0, 0xbb, 0x27, 0x5b, 0x1c, 0xa6, 0xcd, 0xb3, 0xc8, 0x04, 0x76, 0x0d, 0x1c, 0x72,
	0xda, 0x60, 0xfe, 0x89, 0xd1, 0x3d, 0xfe, 0xdd, 0x50, 0x9c, 0x36, 0x85, 0xfe, 0x3a, 0x19, 0xe2,
	0x35, 0x44, 0x1a, 0xe1, 0xbb, 0xe7, 0x7f, 0x70, 0x9a, 0x2d, 0x37, 0x57, 0xcf, 0xe3, 0x24, 0xd5,
	0x6f, 0xf3, 0xc8, 0x8f, 0xc5, 0x2c, 0xb8, 0xc3, 0x28, 0x65, 0x59, 0x30, 0x8d, 0xf3, 0x20, 0xcd,
	0x34, 0xaa, 0x8c, 0xf1, 0xc0, 0xfc, 0xe0, 0x41, 0xad, 0x2f, 0xea, 0x98, 0x87, 0xcb, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x13, 0x36, 0x14, 0xc2, 0x12, 0x03, 0x00, 0x00,
}
